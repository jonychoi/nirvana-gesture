{"version":3,"sources":["gestures/paper.js","components/posecanvas.js","utilities.js","gestures/rock.js","gestures/left.js","gestures/right.js","detector.js","components/items.js","posters/1.jpg","posters/2.jpg","posters/3.jpg","posters/4.jpg","posters/5.jpg","posters/6.jpg","posters/7.jpg","posters/8.jpg","posters/9.jpg","posters/10.png","posters/11.jpg","posters/index.js","components/scroller.js","App.js","index.js"],"names":["PoseCanvas","webcamRef","canvasRef","className","style","transform","height","ref","position","marginLeft","marginRight","left","right","textAlign","zIndex","width","fingerJoints","thumb","indexFinger","middleFinger","ringFinger","pinky","drawHand","predictions","ctx","length","forEach","prediction","landmarks","j","Object","keys","finger","k","firstJointIndex","secondJointIndex","beginPath","moveTo","lineTo","strokeStyle","lineWidth","stroke","i","x","y","arc","Math","PI","fillStyle","fill","paperGesture","GestureDescription","Finger","Thumb","Index","Middle","Ring","Pinky","addCurl","FingerCurl","NoCurl","addDirection","FingerDirection","VerticalUp","rockGesture","FullCurl","VerticaDown","leftGesture","DiagonalUpLeft","HorizontalLeft","rightGesture","DiagonalUpRight","HorizontalRight","detect","net","setGesutre","a","current","video","readyState","videoWidth","videoHeight","estimateHands","hand","GE","fp","estimate","undefined","gesture","gestures","console","log","confidence","map","maxConfidence","indexOf","max","apply","name","getContext","Item","src","id","select","overflow","color","backgroundColor","justifyContent","transition","alt","objectFit","_1","_2","_3","_4","_5","_6","_7","_8","_9","_10","_11","Scroller","useRef","useState","setPosition","stop","setStop","setSelect","setTransition","useEffect","halflength","floor","posters","widthpos","offsetWidth","calculator","positioner","display","overflowY","overflowX","alignItems","flexDirection","alignSelf","justifySelf","item","index","fontWeight","fontSize","marginTop","App","setGesture","runNirvanaPose","handpose","setInterval","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d14253de.chunk.js","sourcesContent":["// Import dependencies\nimport {Finger, FingerCurl, FingerDirection, GestureDescription} from 'fingerpose'; \n\n/*\n\nthumb: [0, 1, 2, 3, 4],\nindexFinger: [0, 5, 6, 7, 8],\nmiddleFinger: [0, 9, 10, 11, 12],\nringFinger: [0, 13, 14, 15, 16],\npinky: [0, 17, 18, 19, 20],\n\n*/\n\n// Define Gesture Description\nexport const paperGesture = new GestureDescription('paper'); \n\nfor(let finger of [Finger.Thumb, Finger.Index, Finger.Middle, Finger.Ring, Finger.Pinky]){\n    paperGesture.addCurl(finger, FingerCurl.NoCurl, 0.9); \n    paperGesture.addDirection(finger, FingerDirection.VerticalUp, 0.9);\n}","import React from 'react';\nimport Webcam from \"react-webcam\";\n\nexport const PoseCanvas = ({webcamRef, canvasRef}) => {\n    return (\n        <div className=\"posecanvas\" style={{transform: 'scale(-1, 1)', height: 480 / 1.7}}>\n            <Webcam ref={webcamRef}\n                style={{\n                position: 'absolute',\n                marginLeft: 'auto',\n                marginRight: 'auto',\n                left: 0,\n                right: 0,\n                textAlign: \"center\",\n                zIndex: 10,\n                width: 640 / 1.7, \n                height: 480 / 1.7,\n                }}\n            />\n            <canvas ref={canvasRef}\n                style={{\n                position: 'absolute',\n                marginLeft: 'auto',\n                marginRight: 'auto',\n                left: 0,\n                right: 0,\n                textAlign: \"center\",\n                zIndex: 10,\n                width: 640 / 1.7, \n                height: 480 / 1.7,\n                }}\n            />\n        </div>\n    )\n}\n\nexport default PoseCanvas;","\n\n// Points for fingers\nconst fingerJoints = {\n    thumb: [0, 1, 2, 3, 4],\n    indexFinger: [0, 5, 6, 7, 8],\n    middleFinger: [0, 9, 10, 11, 12],\n    ringFinger: [0, 13, 14, 15, 16],\n    pinky: [0, 17, 18, 19, 20],\n  };\n\n\n\nexport const drawHand = (predictions, ctx) => {\n    //chack if we have predictions\n    if (predictions.length > 0) {\n        //loop through each prediction\n        predictions.forEach((prediction) => {\n            //grab landmarks\n            const landmarks = prediction.landmarks;\n\n            //loop through fingers\n            for (let j = 0; j < Object.keys(fingerJoints).length; j++) {\n                let finger = Object.keys(fingerJoints)[j];\n                //loop through pairs of joints\n                for (let k = 0; k < fingerJoints[finger].length - 1; k++) {\n                    //Get pairs of joints\n                    const firstJointIndex = fingerJoints[finger][k];\n                    const secondJointIndex = fingerJoints[finger][k+1];\n\n                    //Draw Path\n                    ctx.beginPath();\n                    ctx.moveTo(\n                        landmarks[firstJointIndex][0],\n                        landmarks[firstJointIndex][1]\n                    );\n                    ctx.lineTo(\n                        landmarks[secondJointIndex][0],\n                        landmarks[secondJointIndex][1]\n                    );\n                    ctx.strokeStyle = 'plum';\n                    ctx.lineWidth = 4;\n                    ctx.stroke();\n                }\n            }\n            // Loop through landmarks and draw em\n            for (let i = 0; i < landmarks.length; i++) {\n                // Get x point\n                const x = landmarks[i][0];\n                // Get y point\n                const y = landmarks[i][1];\n                // Start drawing\n                ctx.beginPath();\n                ctx.arc(x, y, 5, 0, 3 * Math.PI);\n\n                // Set line color\n                ctx.fillStyle = '#00dcff';\n                ctx.fill();\n            }\n        })\n    }\n}","// Import dependencies\nimport {Finger, FingerCurl, FingerDirection, GestureDescription} from 'fingerpose'; \n\n/*\n\nthumb: [0, 1, 2, 3, 4],\nindexFinger: [0, 5, 6, 7, 8],\nmiddleFinger: [0, 9, 10, 11, 12],\nringFinger: [0, 13, 14, 15, 16],\npinky: [0, 17, 18, 19, 20],\n\n*/\n\n// Define Gesture Description\nexport const rockGesture = new GestureDescription('rock'); \n\nfor(let finger of [Finger.Thumb, Finger.Index, Finger.Middle, Finger.Ring, Finger.Pinky]){\n    rockGesture.addCurl(finger, FingerCurl.FullCurl, 1); \n    rockGesture.addDirection(finger, FingerDirection.VerticaDown, 0.55);\n}","// Import dependencies\nimport {Finger, FingerCurl, FingerDirection, GestureDescription} from 'fingerpose'; \n\n// Define Gesture Description\nexport const leftGesture = new GestureDescription('left'); \n\n\nfor(let finger of [Finger.Thumb, Finger.Index, Finger.Middle, Finger.Ring, Finger.Pinky]){\n    leftGesture.addCurl(finger, FingerCurl.NoCurl, .75); \n    leftGesture.addDirection(finger, FingerDirection.DiagonalUpLeft, 0.75)\n    leftGesture.addDirection(finger, FingerDirection.HorizontalLeft, 0.75);\n}","// Import dependencies\nimport {Finger, FingerCurl, FingerDirection, GestureDescription} from 'fingerpose'; \n\n/*\n\nthumb: [0, 1, 2, 3, 4],\nindexFinger: [0, 5, 6, 7, 8],\nmiddleFinger: [0, 9, 10, 11, 12],\nringFinger: [0, 13, 14, 15, 16],\npinky: [0, 17, 18, 19, 20],\n\n*/\n\n// Define Gesture Description\nexport const rightGesture = new GestureDescription('right'); \n\nfor(let finger of [Finger.Thumb, Finger.Index, Finger.Middle, Finger.Ring, Finger.Pinky]){\n    rightGesture.addCurl(finger, FingerCurl.NoCurl, .75); \n    rightGesture.addDirection(finger, FingerDirection.DiagonalUpRight, 0.75)\n    rightGesture.addDirection(finger, FingerDirection.HorizontalRight, 0.75);\n}","import {drawHand} from \"./utilities\";\nimport * as fp from \"fingerpose\";\nimport { paperGesture } from \"./gestures/paper\";\nimport {rockGesture} from './gestures/rock';\nimport {leftGesture} from './gestures/left';\nimport {rightGesture} from './gestures/right';\n\n\nexport const detect = async (net, webcamRef, canvasRef, setGesutre) => {\n    //check data is available\n    if (\n      typeof webcamRef.current !== \"undefined\" &&\n      webcamRef.current !== null &&\n      webcamRef.current.video.readyState === 4\n    ) {\n      // Get Video Properties\n      const video = webcamRef.current.video;\n      const videoWidth = webcamRef.current.video.videoWidth;\n      const videoHeight = webcamRef.current.video.videoHeight;\n\n      //set video width\n      webcamRef.current.video.width = videoWidth;\n      webcamRef.current.video.height= videoHeight;\n\n      //set canvas height and width\n      canvasRef.current.width = videoWidth;\n      canvasRef.current.height= videoHeight;\n\n      //make detections\n      const hand = await net.estimateHands(video);\n      //console.log(hand)\n\n      if (hand.length > 0) {\n        const GE = new fp.GestureEstimator([\n          leftGesture,\n          rightGesture,\n          rockGesture,\n          paperGesture,\n        ]);\n        const gesture = await GE.estimate(hand[0].landmarks, 4);\n        if (gesture.gestures !== undefined && gesture.gestures.length > 0) {\n          console.log(gesture.gestures);\n\n          const confidence = gesture.gestures.map(\n            (prediction) => prediction.confidence\n          );\n          const maxConfidence = confidence.indexOf(\n            Math.max.apply(null, confidence)\n          );\n          \n          console.log(gesture.gestures[maxConfidence]);\n          setGesutre(gesture.gestures[maxConfidence].name);\n        }\n      }\n\n      \n\n      //draw mesh\n      \n      const ctx = canvasRef.current.getContext(\"2d\");\n      drawHand(hand, ctx);\n    }\n  };","import React from 'react';\n\n\nexport const Item = ({src, id, select}) => {\n    return (\n        <div style={{width: select === id ? 150 * 1.5 : 150, height: select === id ? 220 * 1.5 : 220, marginLeft: 20, marginRight: 20, overflow: 'hidden', color: 'white', backgroundColor: 'white', textAlign: 'center', justifyContent: 'center', transition: 'all 300ms'}}>\n            <img alt=\"poster\" src={src} style={{width: '100%', height: '100%', objectFit: 'cover'}} />\n        </div>\n    )\n}\n\nexport default Item;","export default __webpack_public_path__ + \"static/media/1.d45df112.jpg\";","export default __webpack_public_path__ + \"static/media/2.a6bd5bbb.jpg\";","export default __webpack_public_path__ + \"static/media/3.711032e0.jpg\";","export default __webpack_public_path__ + \"static/media/4.4e78807b.jpg\";","export default __webpack_public_path__ + \"static/media/5.f22c965f.jpg\";","export default __webpack_public_path__ + \"static/media/6.477caece.jpg\";","export default __webpack_public_path__ + \"static/media/7.e6aa15a8.jpg\";","export default __webpack_public_path__ + \"static/media/8.c58922f4.jpg\";","export default __webpack_public_path__ + \"static/media/9.c1d9f561.jpg\";","export default __webpack_public_path__ + \"static/media/10.7e8bb2e9.png\";","export default __webpack_public_path__ + \"static/media/11.17512b37.jpg\";","import _1 from './1.jpg';\nimport _2 from './2.jpg';\nimport _3 from './3.jpg';\nimport _4 from './4.jpg';\nimport _5 from './5.jpg';\nimport _6 from './6.jpg';\nimport _7 from './7.jpg';\nimport _8 from './8.jpg';\nimport _9 from './9.jpg';\nimport _10 from './10.png';\nimport _11 from './11.jpg';\n\nexport default [_1, _2, _3, _4, _5, _6, _7, _8, _9, _10, _11, _1, _2, _3, _4, _5, _6, _7, _8, _9, _10, _11, _1, _2, _3, _4, _5, _6, _7, _8, _9, _10, _11, _1, _2, _3, _4, _5, _6, _7, _8, _9, _10, _11];","import React, {useState, useEffect, useRef} from 'react';\nimport Item from './items';\nimport posters from '../posters';\n\nexport const Scroller = ({gesture}) => {\n    const width = useRef(null);\n    const [position, setPosition] = useState(0);\n    const [stop, setStop] = useState(false);\n    const [select, setSelect] = useState(null);\n    const [transition, setTransition] = useState('left 300ms');\n    \n    useEffect(() => {\n        const calculator = () => {\n            let halflength = Math.floor(posters.length / 2);\n            let widthpos = width.current.offsetWidth;\n            console.log(Math.floor(halflength + position / widthpos * halflength));\n            if(position > 0) {\n                return setSelect(Math.floor(halflength + position / widthpos * halflength) + 7);\n            } else {\n                return setSelect(Math.floor(halflength -position / widthpos * halflength) + 7);\n            }\n        }\n        const positioner = () => {\n            if (gesture === 'paper'){\n                setSelect(stop ? true : false);\n                setStop(false);\n                setSelect(null);\n            } else if (gesture === \"rock\"){\n                setStop(true);\n                calculator();\n                setTransition('left 0ms');\n            } else if (gesture === \"left\" && !stop){\n                setTransition('left 300ms');\n                setStop(false);\n                let add = position + 20;\n                setPosition(add);\n            } else if (gesture === \"right\" && !stop){\n                setTransition('left 300ms');\n                setStop(false);\n                let add = position - 20;\n                setPosition(add);\n            }\n        }\n        positioner();\n    }, [gesture, position, select, stop])\n    return (\n        <>\n            <div style={{width: '100%', height: 300, position: 'relative', display: 'flex', overflowY: 'hidden', overflowX: 'scroll', backgroundColor: 'black', alignItems: 'center', justifyContent: 'center'}}>\n                <div ref={width} style={{left: position, transition: transition, position: 'relative', display: 'flex', flexDirection: 'row', alignItems: 'center', justifyContent: 'center', alignSelf: 'center', justifySelf: 'center', height: '100%'}}>\n                    {posters.map((item, index) => <Item select={select} src={item} key={index} id={index} />)}\n                </div>\n            </div>\n            <h1 style={{fontWeight: '700', fontSize: 50, color: 'white', marginTop: 25}}>{select ? 'selected' : 'diselected'}</h1>\n        </>\n    )\n}\n\nexport default Scroller;","import React, {useRef, useState, useEffect} from 'react';\nimport * as tf from \"@tensorflow/tfjs\";\nimport * as handpose from \"@tensorflow-models/handpose\";\nimport PoseCanvas from './components/posecanvas';\nimport './styles/App.css';\nimport {detect} from './detector';\nimport Scroller from './components/scroller';\n\nfunction App() {\n  const [gesture, setGesture] = useState(null);\n\n  const webcamRef = useRef(null);\n  const canvasRef = useRef(null);\n  \n  const runNirvanaPose = async () => {\n    const net = await handpose.load();\n    console.log('Handpose model loaded');\n    \n    setInterval(() => {\n      detect(net, webcamRef, canvasRef, setGesture);\n    }, 10);\n  };\n  \n  useEffect(() => {runNirvanaPose()}, [])\n  return (\n    <div className=\"App\">\n      <Scroller gesture={gesture} />\n      <PoseCanvas webcamRef={webcamRef} canvasRef={canvasRef} />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}