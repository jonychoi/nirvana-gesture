{"version":3,"sources":["gestures/paper.js","components/posecanvas.js","utilities.js","gestures/rock.js","gestures/left.js","gestures/right.js","detector.js","components/items.js","posters/1.jpg","posters/2.jpg","posters/3.jpg","posters/4.jpg","posters/5.jpg","posters/6.jpg","posters/7.jpg","posters/8.jpg","posters/9.jpg","posters/10.png","posters/11.jpg","posters/index.js","components/scroller.js","App.js","index.js"],"names":["PoseCanvas","webcamRef","canvasRef","className","style","transform","height","ref","position","marginLeft","marginRight","left","right","textAlign","zIndex","width","fingerJoints","thumb","indexFinger","middleFinger","ringFinger","pinky","drawHand","predictions","ctx","length","forEach","prediction","landmarks","j","Object","keys","finger","k","firstJointIndex","secondJointIndex","beginPath","moveTo","lineTo","strokeStyle","lineWidth","stroke","i","x","y","arc","Math","PI","fillStyle","fill","paperGesture","GestureDescription","Finger","Thumb","Index","Middle","Ring","Pinky","addCurl","FingerCurl","NoCurl","addDirection","FingerDirection","VerticalUp","rockGesture","FullCurl","VerticaDown","leftGesture","DiagonalUpLeft","HorizontalLeft","rightGesture","DiagonalUpRight","HorizontalRight","detect","net","setGesutre","a","current","video","readyState","videoWidth","videoHeight","estimateHands","hand","console","log","GE","fp","estimate","undefined","gesture","gestures","confidence","map","maxConfidence","indexOf","max","apply","name","getContext","Item","src","id","select","overflow","color","backgroundColor","justifyContent","transition","alt","objectFit","_1","_2","_3","_4","_5","_6","_7","_8","_9","_10","_11","Scroller","isLoaded","useRef","useState","setPosition","stop","setStop","setSelect","setTransition","useEffect","halflength","floor","posters","widthpos","offsetWidth","calculator","positioner","display","overflowY","overflowX","alignItems","weight","flexDirection","alignSelf","justifySelf","item","index","fontWeight","fontSize","marginTop","App","setGesture","setIsLoaded","runNirvanaPose","handpose","setInterval","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.44e8ef0e.chunk.js","sourcesContent":["// Import dependencies\r\nimport {Finger, FingerCurl, FingerDirection, GestureDescription} from 'fingerpose'; \r\n\r\n/*\r\n\r\nthumb: [0, 1, 2, 3, 4],\r\nindexFinger: [0, 5, 6, 7, 8],\r\nmiddleFinger: [0, 9, 10, 11, 12],\r\nringFinger: [0, 13, 14, 15, 16],\r\npinky: [0, 17, 18, 19, 20],\r\n\r\n*/\r\n\r\n// Define Gesture Description\r\nexport const paperGesture = new GestureDescription('paper'); \r\n\r\nfor(let finger of [Finger.Thumb, Finger.Index, Finger.Middle, Finger.Ring, Finger.Pinky]){\r\n    paperGesture.addCurl(finger, FingerCurl.NoCurl, 0.9); \r\n    paperGesture.addDirection(finger, FingerDirection.VerticalUp, 0.9);\r\n}","import React from 'react';\r\nimport Webcam from \"react-webcam\";\r\n\r\nexport const PoseCanvas = ({webcamRef, canvasRef}) => {\r\n    return (\r\n        <div className=\"posecanvas\" style={{transform: 'scale(-1, 1)', height: 480 / 1.7}}>\r\n            <Webcam ref={webcamRef}\r\n                style={{\r\n                position: 'absolute',\r\n                marginLeft: 'auto',\r\n                marginRight: 'auto',\r\n                left: 0,\r\n                right: 0,\r\n                textAlign: \"center\",\r\n                zIndex: 10,\r\n                width: 640 / 1.7, \r\n                height: 480 / 1.7,\r\n                }}\r\n            />\r\n            <canvas ref={canvasRef}\r\n                style={{\r\n                position: 'absolute',\r\n                marginLeft: 'auto',\r\n                marginRight: 'auto',\r\n                left: 0,\r\n                right: 0,\r\n                textAlign: \"center\",\r\n                zIndex: 10,\r\n                width: 640 / 1.7, \r\n                height: 480 / 1.7,\r\n                }}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PoseCanvas;","\r\n\r\n// Points for fingers\r\nconst fingerJoints = {\r\n    thumb: [0, 1, 2, 3, 4],\r\n    indexFinger: [0, 5, 6, 7, 8],\r\n    middleFinger: [0, 9, 10, 11, 12],\r\n    ringFinger: [0, 13, 14, 15, 16],\r\n    pinky: [0, 17, 18, 19, 20],\r\n  };\r\n\r\n\r\n\r\nexport const drawHand = (predictions, ctx) => {\r\n    //chack if we have predictions\r\n    if (predictions.length > 0) {\r\n        //loop through each prediction\r\n        predictions.forEach((prediction) => {\r\n            //grab landmarks\r\n            const landmarks = prediction.landmarks;\r\n\r\n            //loop through fingers\r\n            for (let j = 0; j < Object.keys(fingerJoints).length; j++) {\r\n                let finger = Object.keys(fingerJoints)[j];\r\n                //loop through pairs of joints\r\n                for (let k = 0; k < fingerJoints[finger].length - 1; k++) {\r\n                    //Get pairs of joints\r\n                    const firstJointIndex = fingerJoints[finger][k];\r\n                    const secondJointIndex = fingerJoints[finger][k+1];\r\n\r\n                    //Draw Path\r\n                    ctx.beginPath();\r\n                    ctx.moveTo(\r\n                        landmarks[firstJointIndex][0],\r\n                        landmarks[firstJointIndex][1]\r\n                    );\r\n                    ctx.lineTo(\r\n                        landmarks[secondJointIndex][0],\r\n                        landmarks[secondJointIndex][1]\r\n                    );\r\n                    ctx.strokeStyle = 'plum';\r\n                    ctx.lineWidth = 4;\r\n                    ctx.stroke();\r\n                }\r\n            }\r\n            // Loop through landmarks and draw em\r\n            for (let i = 0; i < landmarks.length; i++) {\r\n                // Get x point\r\n                const x = landmarks[i][0];\r\n                // Get y point\r\n                const y = landmarks[i][1];\r\n                // Start drawing\r\n                ctx.beginPath();\r\n                ctx.arc(x, y, 5, 0, 3 * Math.PI);\r\n\r\n                // Set line color\r\n                ctx.fillStyle = '#00dcff';\r\n                ctx.fill();\r\n            }\r\n        })\r\n    }\r\n}","// Import dependencies\r\nimport {Finger, FingerCurl, FingerDirection, GestureDescription} from 'fingerpose'; \r\n\r\n/*\r\n\r\nthumb: [0, 1, 2, 3, 4],\r\nindexFinger: [0, 5, 6, 7, 8],\r\nmiddleFinger: [0, 9, 10, 11, 12],\r\nringFinger: [0, 13, 14, 15, 16],\r\npinky: [0, 17, 18, 19, 20],\r\n\r\n*/\r\n\r\n// Define Gesture Description\r\nexport const rockGesture = new GestureDescription('rock'); \r\n\r\nfor(let finger of [Finger.Thumb, Finger.Index, Finger.Middle, Finger.Ring, Finger.Pinky]){\r\n    rockGesture.addCurl(finger, FingerCurl.FullCurl, 1); \r\n    rockGesture.addDirection(finger, FingerDirection.VerticaDown, 0.55);\r\n}","// Import dependencies\r\nimport {Finger, FingerCurl, FingerDirection, GestureDescription} from 'fingerpose'; \r\n\r\n// Define Gesture Description\r\nexport const leftGesture = new GestureDescription('left'); \r\n\r\n\r\nfor(let finger of [Finger.Thumb, Finger.Index, Finger.Middle, Finger.Ring, Finger.Pinky]){\r\n    leftGesture.addCurl(finger, FingerCurl.NoCurl, .75); \r\n    leftGesture.addDirection(finger, FingerDirection.DiagonalUpLeft, 0.75)\r\n    leftGesture.addDirection(finger, FingerDirection.HorizontalLeft, 0.75);\r\n}","// Import dependencies\r\nimport {Finger, FingerCurl, FingerDirection, GestureDescription} from 'fingerpose'; \r\n\r\n/*\r\n\r\nthumb: [0, 1, 2, 3, 4],\r\nindexFinger: [0, 5, 6, 7, 8],\r\nmiddleFinger: [0, 9, 10, 11, 12],\r\nringFinger: [0, 13, 14, 15, 16],\r\npinky: [0, 17, 18, 19, 20],\r\n\r\n*/\r\n\r\n// Define Gesture Description\r\nexport const rightGesture = new GestureDescription('right'); \r\n\r\nfor(let finger of [Finger.Thumb, Finger.Index, Finger.Middle, Finger.Ring, Finger.Pinky]){\r\n    rightGesture.addCurl(finger, FingerCurl.NoCurl, .75); \r\n    rightGesture.addDirection(finger, FingerDirection.DiagonalUpRight, 0.75)\r\n    rightGesture.addDirection(finger, FingerDirection.HorizontalRight, 0.75);\r\n}","import {drawHand} from \"./utilities\";\r\nimport * as fp from \"fingerpose\";\r\nimport { paperGesture } from \"./gestures/paper\";\r\nimport {rockGesture} from './gestures/rock';\r\nimport {leftGesture} from './gestures/left';\r\nimport {rightGesture} from './gestures/right';\r\n\r\n\r\nexport const detect = async (net, webcamRef, canvasRef, setGesutre) => {\r\n    //check data is available\r\n    if (\r\n      typeof webcamRef.current !== \"undefined\" &&\r\n      webcamRef.current !== null &&\r\n      webcamRef.current.video.readyState === 4\r\n    ) {\r\n      // Get Video Properties\r\n      const video = webcamRef.current.video;\r\n      const videoWidth = webcamRef.current.video.videoWidth;\r\n      const videoHeight = webcamRef.current.video.videoHeight;\r\n\r\n      //set video width\r\n      webcamRef.current.video.width = videoWidth;\r\n      webcamRef.current.video.height= videoHeight;\r\n\r\n      //set canvas height and width\r\n      canvasRef.current.width = videoWidth;\r\n      canvasRef.current.height= videoHeight;\r\n\r\n      //make detections\r\n      const hand = await net.estimateHands(video);\r\n      console.log(\"this is\", hand[0].landmarks)\r\n\r\n      if (hand.length > 0) {\r\n        const GE = new fp.GestureEstimator([\r\n          leftGesture,\r\n          rightGesture,\r\n          rockGesture,\r\n          paperGesture,\r\n        ]);\r\n        const gesture = await GE.estimate(hand[0].landmarks, 4);\r\n        if (gesture.gestures !== undefined && gesture.gestures.length > 0) {\r\n          console.log(gesture.gestures);\r\n\r\n          const confidence = gesture.gestures.map(\r\n            (prediction) => prediction.confidence\r\n          );\r\n          const maxConfidence = confidence.indexOf(\r\n            Math.max.apply(null, confidence)\r\n          );\r\n          \r\n          console.log(gesture.gestures[maxConfidence]);\r\n          setGesutre(gesture.gestures[maxConfidence].name);\r\n        }\r\n      }\r\n\r\n      \r\n\r\n      //draw mesh\r\n      \r\n      const ctx = canvasRef.current.getContext(\"2d\");\r\n      drawHand(hand, ctx);\r\n    }\r\n  };","import React from 'react';\r\n\r\n\r\nexport const Item = ({src, id, select}) => {\r\n    return (\r\n        <div style={{width: select === id ? 150 * 1.5 : 150, height: select === id ? 220 * 1.5 : 220, marginLeft: 20, marginRight: 20, overflow: 'hidden', color: 'white', backgroundColor: 'white', textAlign: 'center', justifyContent: 'center', transition: 'all 300ms'}}>\r\n            <img alt=\"poster\" src={src} style={{width: '100%', height: '100%', objectFit: 'cover'}} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Item;","export default __webpack_public_path__ + \"static/media/1.d45df112.jpg\";","export default __webpack_public_path__ + \"static/media/2.a6bd5bbb.jpg\";","export default __webpack_public_path__ + \"static/media/3.711032e0.jpg\";","export default __webpack_public_path__ + \"static/media/4.4e78807b.jpg\";","export default __webpack_public_path__ + \"static/media/5.f22c965f.jpg\";","export default __webpack_public_path__ + \"static/media/6.477caece.jpg\";","export default __webpack_public_path__ + \"static/media/7.e6aa15a8.jpg\";","export default __webpack_public_path__ + \"static/media/8.c58922f4.jpg\";","export default __webpack_public_path__ + \"static/media/9.c1d9f561.jpg\";","export default __webpack_public_path__ + \"static/media/10.7e8bb2e9.png\";","export default __webpack_public_path__ + \"static/media/11.17512b37.jpg\";","import _1 from './1.jpg';\r\nimport _2 from './2.jpg';\r\nimport _3 from './3.jpg';\r\nimport _4 from './4.jpg';\r\nimport _5 from './5.jpg';\r\nimport _6 from './6.jpg';\r\nimport _7 from './7.jpg';\r\nimport _8 from './8.jpg';\r\nimport _9 from './9.jpg';\r\nimport _10 from './10.png';\r\nimport _11 from './11.jpg';\r\n\r\nexport default [_1, _2, _3, _4, _5, _6, _7, _8, _9, _10, _11, _1, _2, _3, _4, _5, _6, _7, _8, _9, _10, _11, _1, _2, _3, _4, _5, _6, _7, _8, _9, _10, _11, _1, _2, _3, _4, _5, _6, _7, _8, _9, _10, _11];","import React, {useState, useEffect, useRef} from 'react';\r\nimport Item from './items';\r\nimport posters from '../posters';\r\n\r\nexport const Scroller = ({gesture, isLoaded}) => {\r\n    const width = useRef(null);\r\n    const [position, setPosition] = useState(0);\r\n    const [stop, setStop] = useState(false);\r\n    const [select, setSelect] = useState(null);\r\n    const [transition, setTransition] = useState('left 300ms');\r\n    \r\n    useEffect(() => {\r\n        const calculator = () => {\r\n            let halflength = Math.floor(posters.length / 2);\r\n            let widthpos = width.current.offsetWidth;\r\n            console.log(Math.floor(halflength + position / widthpos * halflength));\r\n            if(position > 0) {\r\n                return setSelect(Math.floor(halflength + position / widthpos * halflength) + 7);\r\n            } else {\r\n                return setSelect(Math.floor(halflength -position / widthpos * halflength) + 7);\r\n            }\r\n        }\r\n        const positioner = () => {\r\n            if (gesture === 'paper'){\r\n                setSelect(stop ? true : false);\r\n                setStop(false);\r\n                setSelect(null);\r\n            } else if (gesture === \"rock\"){\r\n                setStop(true);\r\n                calculator();\r\n                setTransition('left 0ms');\r\n            } else if (gesture === \"left\" && !stop){\r\n                setTransition('left 550ms');\r\n                setStop(false);\r\n                let add = position + 20;\r\n                setPosition(add);\r\n            } else if (gesture === \"right\" && !stop){\r\n                setTransition('left 550ms');\r\n                setStop(false);\r\n                let add = position - 20;\r\n                setPosition(add);\r\n            }\r\n        }\r\n        positioner();\r\n    }, [gesture, position, select, stop])\r\n    return (\r\n        <>\r\n            <div style={{width: '100%', height: 300, position: 'relative', display: 'flex', overflowY: 'hidden', overflowX: 'scroll', backgroundColor: 'black', alignItems: 'center', justifyContent: 'center'}}>\r\n                {!isLoaded && <h3 style={{weight: 700, color: \"white\"}}>Detector Loading...</h3>}\r\n                <div ref={width} style={{left: position, transition: transition, position: 'relative', display: 'flex', flexDirection: 'row', alignItems: 'center', justifyContent: 'center', alignSelf: 'center', justifySelf: 'center', height: '100%'}}>\r\n                    {posters.map((item, index) => <Item select={select} src={item} key={index} id={index} />)}\r\n                </div>\r\n            </div>\r\n            <h1 style={{fontWeight: '700', fontSize: 50, color: 'white', marginTop: 25}}>{select ? 'selected' : 'diselected'}</h1>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Scroller;","import React, {useRef, useState, useEffect} from 'react';\r\nimport * as tf from \"@tensorflow/tfjs\";\r\nimport * as handpose from \"@tensorflow-models/handpose\";\r\nimport PoseCanvas from './components/posecanvas';\r\nimport './styles/App.css';\r\nimport {detect} from './detector';\r\nimport Scroller from './components/scroller';\r\n\r\nfunction App() {\r\n  const [gesture, setGesture] = useState(null);\r\n  const [isLoaded, setIsLoaded] = useState(false);\r\n\r\n  const webcamRef = useRef(null);\r\n  const canvasRef = useRef(null);\r\n  \r\n  const runNirvanaPose = async () => {\r\n    const net = await handpose.load();\r\n    console.log('Handpose model loaded');\r\n    setIsLoaded(true)\r\n    \r\n    setInterval(() => {\r\n      detect(net, webcamRef, canvasRef, setGesture);\r\n    }, 10);\r\n  };\r\n  \r\n  useEffect(() => {runNirvanaPose()}, [])\r\n  return (\r\n    <div className=\"App\">\r\n      <Scroller gesture={gesture} isLoaded={isLoaded} />\r\n      <PoseCanvas webcamRef={webcamRef} canvasRef={canvasRef} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './styles/index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\n"],"sourceRoot":""}